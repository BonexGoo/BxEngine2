<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_bx_util_8hpp" kind="file">
    <compoundname>BxUtil.hpp</compoundname>
    <includes refid="_bx_memory_8hpp" local="no">BxMemory.hpp</includes>
    <includes refid="_bx_singleton_8hpp" local="no">BxSingleton.hpp</includes>
    <includedby refid="_bx_draw_8hpp" local="no">BxDraw.hpp</includedby>
    <includedby refid="_bx_dynamic_8hpp" local="no">BxDynamic.hpp</includedby>
    <includedby refid="_bx_path_find_8hpp" local="no">BxPathFind.hpp</includedby>
    <includedby refid="_bx_string_8hpp" local="no">BxString.hpp</includedby>
    <includedby refid="_bx_tween_8hpp" local="no">BxTween.hpp</includedby>
    <includedby refid="_bx_var_vector_8hpp" local="no">BxVarVector.hpp</includedby>
    <includedby refid="_bx_core_for_s3_e_8cpp" local="no">BxCoreForS3E.cpp</includedby>
    <includedby refid="_bx_core_impl_8cpp" local="no">BxCoreImpl.cpp</includedby>
    <incdepgraph>
      <node id="461">
        <label>BxSingleton.hpp</label>
        <link refid="_bx_singleton_8hpp_source"/>
        <childnode refid="459" relation="include">
        </childnode>
      </node>
      <node id="456">
        <label>BxCore.hpp</label>
        <link refid="_bx_core_8hpp_source"/>
        <childnode refid="457" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>BxType.hpp</label>
        <link refid="_bx_type_8hpp_source"/>
      </node>
      <node id="458">
        <label>BxPool.hpp</label>
        <link refid="_bx_pool_8hpp_source"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>BxThrow.hpp</label>
        <link refid="_bx_throw_8hpp_source"/>
        <childnode refid="458" relation="include">
        </childnode>
      </node>
      <node id="454">
        <label>BxUtil.hpp</label>
        <link refid="BxUtil.hpp"/>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
      <node id="455">
        <label>BxMemory.hpp</label>
        <link refid="_bx_memory_8hpp_source"/>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="460">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="471">
        <label>BxString.hpp</label>
        <link refid="_bx_string_8hpp_source"/>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
      <node id="463">
        <label>BxDraw.hpp</label>
        <link refid="_bx_draw_8hpp_source"/>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>BxImage.hpp</label>
        <link refid="_bx_image_8hpp_source"/>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
      </node>
      <node id="470">
        <label>BxDynamic.hpp</label>
        <link refid="_bx_dynamic_8hpp_source"/>
      </node>
      <node id="478">
        <label>BxTelex.hpp</label>
        <link refid="_bx_telex_8hpp_source"/>
      </node>
      <node id="468">
        <label>BxScene.hpp</label>
        <link refid="_bx_scene_8hpp_source"/>
        <childnode refid="469" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>BxXml.hpp</label>
        <link refid="_bx_xml_8hpp_source"/>
        <childnode refid="464" relation="include">
        </childnode>
      </node>
      <node id="474">
        <label>BxWebContent.hpp</label>
        <link refid="_bx_web_content_8hpp_source"/>
        <childnode refid="464" relation="include">
        </childnode>
      </node>
      <node id="464">
        <label>BxGUI.hpp</label>
        <link refid="_bx_g_u_i_8hpp_source"/>
      </node>
      <node id="472">
        <label>BxKeyword.hpp</label>
        <link refid="_bx_keyword_8hpp_source"/>
        <childnode refid="473" relation="include">
        </childnode>
      </node>
      <node id="469">
        <label>BxCoreForS3E.hpp</label>
        <link refid="_bx_core_for_s3_e_8hpp_source"/>
      </node>
      <node id="476">
        <label>BxTween.hpp</label>
        <link refid="_bx_tween_8hpp_source"/>
      </node>
      <node id="466">
        <label>BxAnimate.hpp</label>
        <link refid="_bx_animate_8hpp_source"/>
      </node>
      <node id="462">
        <label>BxUtil.hpp</label>
        <link refid="BxUtil.hpp"/>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
      </node>
      <node id="473">
        <label>BxCoreImpl.hpp</label>
        <link refid="_bx_core_impl_8hpp_source"/>
      </node>
      <node id="467">
        <label>BxPathFind.hpp</label>
        <link refid="_bx_path_find_8hpp_source"/>
      </node>
      <node id="477">
        <label>BxVarVector.hpp</label>
        <link refid="_bx_var_vector_8hpp_source"/>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_bx_util" prot="public">BxUtil</innerclass>
    <innernamespace refid="namespace_bx_util_global">BxUtilGlobal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">﻿#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BxMemory.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BxSingleton.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespace_bx_util_global" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">BxUtilGlobal</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12" refid="namespace_bx_util_global_1a56fb895cb86dd749bb28d00a3e46e1f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>fint<sp/><ref refid="namespace_bx_util_global_1a56fb895cb86dd749bb28d00a3e46e1f9" kindref="member" tooltip="파이값 구하기 ">Pi</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fint)(3.14159265358979323846264338327950288419716939937510<sp/>*<sp/>0x10000<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespace_bx_util_global_1a14e83a98cabb5c7a774f4b754a83356f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a14e83a98cabb5c7a774f4b754a83356f" kindref="member" tooltip="밀리초에 따른 프레임수 구하기 ">Fps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ms<sp/>/<sp/>BxCore::Main::GetCurrentFrameTime();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespace_bx_util_global_1af6b6936a90b9f791ce6f2b2b4d15b15e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1af6b6936a90b9f791ce6f2b2b4d15b15e" kindref="member" tooltip="최소값 구하기 ">Min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>B)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mask<sp/>=<sp/>(A<sp/>-<sp/>B)<sp/>&gt;&gt;<sp/>31;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(A<sp/>&amp;<sp/>Mask)<sp/>|<sp/>(B<sp/>&amp;<sp/>~Mask);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespace_bx_util_global_1a52580a7f5dbd7722b56eab2e3167292f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a52580a7f5dbd7722b56eab2e3167292f" kindref="member" tooltip="최대값 구하기 ">Max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>B)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mask<sp/>=<sp/>(A<sp/>-<sp/>B)<sp/>&gt;&gt;<sp/>31;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(A<sp/>&amp;<sp/>~Mask)<sp/>|<sp/>(B<sp/>&amp;<sp/>Mask);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespace_bx_util_global_1a6287716f318295b8e32e131197694730" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a6287716f318295b8e32e131197694730" kindref="member" tooltip="최소최대 한계설정 ">MinMax</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MinValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxValue)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1af6b6936a90b9f791ce6f2b2b4d15b15e" kindref="member" tooltip="최소값 구하기 ">Min</ref>(<ref refid="namespace_bx_util_global_1a52580a7f5dbd7722b56eab2e3167292f" kindref="member" tooltip="최대값 구하기 ">Max</ref>(MinValue,<sp/>Value),<sp/>MaxValue);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="namespace_bx_util_global_1a488ff490d994d4173653ee396893d5b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a488ff490d994d4173653ee396893d5b9" kindref="member" tooltip="절대값 구하기 ">Abs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>A)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mask<sp/>=<sp/>A<sp/>&gt;&gt;<sp/>31;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(A<sp/>&amp;<sp/>~Mask)<sp/>|<sp/>(-A<sp/>&amp;<sp/>Mask);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="namespace_bx_util_global_1a9cf819f3c909576af6dbc54088271729" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a9cf819f3c909576af6dbc54088271729" kindref="member" tooltip="제곱값 구하기 ">Pow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>A)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A<sp/>*<sp/>A;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="namespace_bx_util_global_1aed2b77f1f355f083931ba7e118115b9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>huge<sp/><ref refid="namespace_bx_util_global_1aed2b77f1f355f083931ba7e118115b9a" kindref="member" tooltip="64비트 제곱값 구하기 ">Pow64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>A)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((huge)<sp/>A)<sp/>*<sp/>A;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="namespace_bx_util_global_1ad12eeb6b5b454f85bf6ea3cf7dcd3094" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1ad12eeb6b5b454f85bf6ea3cf7dcd3094" kindref="member" tooltip="제곱근값 구하기 ">Sqrt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>A)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>CheckFlag<sp/>=<sp/>0x8000,<sp/>BitResult<sp/>=<sp/>0,<sp/>Result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespace_bx_util_global_1a9cf819f3c909576af6dbc54088271729" kindref="member" tooltip="제곱값 구하기 ">Pow</ref>(BitResult<sp/>=<sp/>Result<sp/>|<sp/>(CheckFlag<sp/>&gt;&gt;<sp/>i))<sp/>&lt;=<sp/>A)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>BitResult;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>Result;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="namespace_bx_util_global_1a0732d3795e4787d47c7ac63e74c083ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a0732d3795e4787d47c7ac63e74c083ab" kindref="member" tooltip="64비트 제곱근값 구하기 ">Sqrt64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>huge<sp/>A)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>CheckFlag<sp/>=<sp/>0x80000000,<sp/>BitResult<sp/>=<sp/>0,<sp/>Result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespace_bx_util_global_1aed2b77f1f355f083931ba7e118115b9a" kindref="member" tooltip="64비트 제곱값 구하기 ">Pow64</ref>(BitResult<sp/>=<sp/>Result<sp/>|<sp/>(CheckFlag<sp/>&gt;&gt;<sp/>i))<sp/>&lt;=<sp/>A)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>BitResult;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>Result;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="namespace_bx_util_global_1a677b3048a42145d09849067b4d4a73ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a677b3048a42145d09849067b4d4a73ce" kindref="member" tooltip="스트링길이 구하기 ">StrLen</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>String)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BxASSERT(</highlight><highlight class="stringliteral">&quot;BxUtil&quot;</highlight><highlight class="normal">,<sp/>String);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(String[++i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="143" refid="namespace_bx_util_global_1acf3ce0b4c4af01dfb26f0e82a438fb22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1acf3ce0b4c4af01dfb26f0e82a438fb22" kindref="member" tooltip="템플릿타입 스트링길이 구하기 ">StrLenT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE*<sp/>String)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BxASSERT(</highlight><highlight class="stringliteral">&quot;BxUtil&quot;</highlight><highlight class="normal">,<sp/>String);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(String[++i]);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="namespace_bx_util_global_1a39b70575037e5a54e79b304c82c1822a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a39b70575037e5a54e79b304c82c1822a" kindref="member" tooltip="확장된 스트링길이 구하기(과  도 인식) ">StrLenEx</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>String)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BxASSERT(</highlight><highlight class="stringliteral">&quot;BxUtil&quot;</highlight><highlight class="normal">,<sp/>String);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(String[++i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>String[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>String[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="namespace_bx_util_global_1a41d6743504746604fc1b2607346e2b5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a39b70575037e5a54e79b304c82c1822a" kindref="member" tooltip="확장된 스트링길이 구하기(과  도 인식) ">StrLenEx</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>String,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ExitCode)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BxASSERT(</highlight><highlight class="stringliteral">&quot;BxUtil&quot;</highlight><highlight class="normal">,<sp/>String);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(String[++i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>String[i]<sp/>!=<sp/>ExitCode);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="namespace_bx_util_global_1ad0d73de4f241c8cd6b2a89cf95570d43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>string_rw<sp/><ref refid="namespace_bx_util_global_1ad0d73de4f241c8cd6b2a89cf95570d43" kindref="member" tooltip="스트링 할당 ">StrAlloc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SrcLength)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_rw<sp/>AllocedString<sp/>=<sp/>(string_rw)<sp/><ref refid="namespace_bx_core_1_1_util_1aacaf23bed9737504410d309578cdc7a8" kindref="member" tooltip="메모리할당 ">BxCore::Util::Alloc</ref>(SrcLength<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocedString[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocedString[SrcLength]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AllocedString;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="namespace_bx_util_global_1a33788c5de2f0a7b6e38324b5ecd7ae7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>string_rw<sp/><ref refid="namespace_bx_util_global_1a33788c5de2f0a7b6e38324b5ecd7ae7f" kindref="member" tooltip="스트링 해제 ">StrFree</ref>(string_rw<sp/>AllocedString)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1abe79bf4d20f42ce940b4d4e7d58b7a1d" kindref="member" tooltip="메모리반환 ">BxCore::Util::Free</ref>(AllocedString);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="namespace_bx_util_global_1ab0ebe24132ef62727a0493664df7e8eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1ab0ebe24132ef62727a0493664df7e8eb" kindref="member" tooltip="스트링 복사하기 ">StrCpy</ref>(string_rw_prm<sp/>DstString,<sp/>string_prm<sp/>SrcString,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SrcLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SrcLen<sp/>=<sp/>(SrcLength<sp/>&lt;<sp/>0)?<sp/><ref refid="namespace_bx_util_global_1a677b3048a42145d09849067b4d4a73ce" kindref="member" tooltip="스트링길이 구하기 ">StrLen</ref>(SrcString)<sp/>:<sp/>SrcLength;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(DstString,<sp/>SrcString,<sp/>SrcLen);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstString[SrcLen]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SrcLen;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="namespace_bx_util_global_1af070166376fc2c75242084d8cb7deb3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>string_rw<sp/><ref refid="namespace_bx_util_global_1af070166376fc2c75242084d8cb7deb3a" kindref="member" tooltip="스트링 할당 및 복사하기 ">StrCpyWithAlloc</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>SrcString,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SrcLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SrcLen<sp/>=<sp/>(SrcLength<sp/>&lt;<sp/>0)?<sp/><ref refid="namespace_bx_util_global_1a677b3048a42145d09849067b4d4a73ce" kindref="member" tooltip="스트링길이 구하기 ">StrLen</ref>(SrcString)<sp/>:<sp/>SrcLength;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_rw<sp/>AllocedString<sp/>=<sp/>(string_rw)<sp/><ref refid="namespace_bx_core_1_1_util_1aacaf23bed9737504410d309578cdc7a8" kindref="member" tooltip="메모리할당 ">BxCore::Util::Alloc</ref>(SrcLen<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(AllocedString,<sp/>SrcString,<sp/>SrcLen);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocedString[SrcLen]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AllocedString;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="namespace_bx_util_global_1a6f088d5e02c37b59ffaaacdc19e5d325" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>compare<sp/><ref refid="namespace_bx_util_global_1a6f088d5e02c37b59ffaaacdc19e5d325" kindref="member" tooltip="스트링 비교하기 ">StrCmp</ref>(string_prm<sp/>StringA,<sp/>string_prm<sp/>StringB,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FixedLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FixedLength<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*StringA<sp/>!=<sp/>*StringB)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*StringA<sp/>&lt;<sp/>*StringB)?<sp/>b_is_more<sp/>:<sp/>b_is_less;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*(++StringA)<sp/>|<sp/>*(++StringB));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>FixedLength;<sp/>++i)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(StringA[i]<sp/>!=<sp/>StringB[i])</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(StringA[i]<sp/>&lt;<sp/>StringB[i])?<sp/>b_is_more<sp/>:<sp/>b_is_less;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>same;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="namespace_bx_util_global_1a4317f902f41c2f1cebf54642d42d671f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>compare<sp/><ref refid="namespace_bx_util_global_1a4317f902f41c2f1cebf54642d42d671f" kindref="member" tooltip="대소문자 구분없이 스트링 비교하기 ">StrICmp</ref>(string_prm<sp/>StringA,<sp/>string_prm<sp/>StringB,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FixedLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(FixedLength<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>CharA<sp/>=<sp/>*StringA,<sp/>CharB<sp/>=<sp/>*StringB;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>CharA<sp/>&amp;&amp;<sp/>CharA<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>CharA<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>CharB<sp/>&amp;&amp;<sp/>CharB<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>CharB<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CharA<sp/>!=<sp/>CharB)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(CharA<sp/>&lt;<sp/>CharB)?<sp/>b_is_more<sp/>:<sp/>b_is_less;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*(++StringA)<sp/>|<sp/>*(++StringB));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>FixedLength;<sp/>++i)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>CharA<sp/>=<sp/>StringA[i],<sp/>CharB<sp/>=<sp/>StringB[i];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>CharA<sp/>&amp;&amp;<sp/>CharA<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>CharA<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>CharB<sp/>&amp;&amp;<sp/>CharB<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>CharB<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CharA<sp/>!=<sp/>CharB)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(CharA<sp/>&lt;<sp/>CharB)?<sp/>b_is_more<sp/>:<sp/>b_is_less;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>same;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="namespace_bx_util_global_1a6e24c46c55a8937dc65a258adc40c1b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a6e24c46c55a8937dc65a258adc40c1b9" kindref="member" tooltip="스트링간 동일구역의 길이 구하기 ">StrSameCount</ref>(string_prm<sp/>StringA,<sp/>string_prm<sp/>StringB)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Focus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(StringA[Focus]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>StringA[Focus]<sp/>==<sp/>StringB[Focus])</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++Focus;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Focus;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="namespace_bx_util_global_1a06eca0ea562f266e838ed7bed0843faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="namespace_bx_util_global_1a06eca0ea562f266e838ed7bed0843faa" kindref="member" tooltip="빠른 스트링비교를 위한 해시코드 만들기 ">StrHash</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>String,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SrcLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Hash[4]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SrcLength<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--String;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>*(++String)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>++i)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hash[i<sp/>&amp;<sp/>3]<sp/>^=<sp/>*String;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>SrcLength;<sp/>++i)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hash[i<sp/>&amp;<sp/>3]<sp/>^=<sp/>String[i];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*((uint*)<sp/>Hash);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="namespace_bx_util_global_1ad2174a731be330c26da64403b394bab4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1ad2174a731be330c26da64403b394bab4" kindref="member" tooltip="스트링검색 ">StrSearch</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>DstString,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>SrcString,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(&amp;SrcSearchMap)[256],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DstLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DstLength<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstLength<sp/>=<sp/><ref refid="namespace_bx_util_global_1a677b3048a42145d09849067b4d4a73ce" kindref="member" tooltip="스트링길이 구하기 ">StrLen</ref>(DstString);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SrcLength<sp/>=<sp/>SrcSearchMap[0];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>SrcTail<sp/>=<sp/>SrcString[SrcLength<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DstFocus<sp/>=<sp/>SrcLength<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(DstFocus<sp/>&lt;<sp/>DstLength)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DstString[DstFocus]<sp/>==<sp/>SrcTail)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Result<sp/>=<sp/>DstFocus<sp/>+<sp/>1<sp/>-<sp/>SrcLength;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="namespace_bx_core_1_1_util_1ad732eb2a2948cdab353d9291533cbe14" kindref="member" tooltip="메모리 비교 ">BxCore::Util::MemCmp</ref>(&amp;DstString[Result],<sp/>SrcString,<sp/>SrcLength))</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstFocus<sp/>+=<sp/>SrcSearchMap[(int)<sp/>DstString[DstFocus]];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="namespace_bx_util_global_1a89891dd65b308771858ff8d3dc2be904" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a89891dd65b308771858ff8d3dc2be904" kindref="member" tooltip="스트링검색을 위한 검색맵 만들기 ">StrSearchMap</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>String,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(_out_<sp/>SearchMap)[256])</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1a86d9f355240f547de643ac1dcbb2ed08" kindref="member" tooltip="메모리 초기화 ">BxCore::Util::MemSet</ref>(SearchMap,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Focus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(String[++Focus])<sp/>SearchMap[(int)<sp/>String[Focus<sp/>-<sp/>1]]<sp/>=<sp/>Focus;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SearchMap[i]<sp/>=<sp/>Focus<sp/>-<sp/>SearchMap[i];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="namespace_bx_util_global_1a8e494971c4c523b48ff9a4f8f5c7f5f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a8e494971c4c523b48ff9a4f8f5c7f5f7" kindref="member" tooltip="해당 스트링이 숫자인지의 여부 ">IsNumeric</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>String,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StringLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StringLen<sp/>=<sp/>(StringLength<sp/>&lt;<sp/>0)?<sp/><ref refid="namespace_bx_util_global_1a39b70575037e5a54e79b304c82c1822a" kindref="member" tooltip="확장된 스트링길이 구하기(과  도 인식) ">StrLenEx</ref>(String)<sp/>:<sp/>StringLength;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>StringLen;<sp/>++i)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>String[i]<sp/>&amp;&amp;<sp/>String[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(String[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>String[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="namespace_bx_util_global_1a9d45cf5f144f0aaa40fa169feb915ea1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a9d45cf5f144f0aaa40fa169feb915ea1" kindref="member" tooltip="스트링을 정수로 변환 ">AtoI</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>String,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StringLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IntValue<sp/>=<sp/>0,<sp/>IsMinus<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StringLen<sp/>=<sp/>(StringLength<sp/>&lt;<sp/>0)?<sp/><ref refid="namespace_bx_util_global_1a39b70575037e5a54e79b304c82c1822a" kindref="member" tooltip="확장된 스트링길이 구하기(과  도 인식) ">StrLenEx</ref>(String)<sp/>:<sp/>StringLength;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>StringLen;<sp/>++i)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>String[i]<sp/>&amp;&amp;<sp/>String[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntValue<sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntValue<sp/>+=<sp/>String[i]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsMinus<sp/>==<sp/>-1)<sp/>IsMinus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsMinus<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>String[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsMinus<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsMinus<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>String[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsMinus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(String[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>String[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(IsMinus<sp/>==<sp/>1)?<sp/>-IntValue<sp/>:<sp/>IntValue;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="namespace_bx_util_global_1ae93b9c22557509ab724aaebb7877f15e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>_tmp_<sp/><ref refid="namespace_bx_util_global_1ae93b9c22557509ab724aaebb7877f15e" kindref="member" tooltip="정수를 스트링으로 변환 ">ItoA</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Value)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_storage<sp/>_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char)<sp/>*<sp/>(Length<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Result<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="namespace_bx_core_1_1_thread_1ac8200a15947866932b0851974b98257b" kindref="member" tooltip="현 스레드상의 저장소 개별연결(스레드수량 x 정적변수수량) ">BxCore::Thread::BindStorage</ref>(&amp;_);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result[Length]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsMinus<sp/>=<sp/>(Value<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>UValue<sp/>=<sp/>(uint)((IsMinus)?<sp/>-Value<sp/>:<sp/>Value);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>Length<sp/>-<sp/>1;<sp/>0<sp/>&lt;=<sp/>i;<sp/>--i)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>(UValue<sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UValue<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(UValue<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsMinus)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result[i<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Result[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Result[i];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Result[Length];</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="namespace_bx_util_global_1a47cdf91c7f5f3970844dff6463bb98a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="namespace_bx_util_global_1a47cdf91c7f5f3970844dff6463bb98a9" kindref="member" tooltip="헥사덤프를 양수로 변환 ">HtoI</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Hex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HexLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>UintValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StringLen<sp/>=<sp/>(HexLength<sp/>&lt;<sp/>0)?<sp/><ref refid="namespace_bx_util_global_1a39b70575037e5a54e79b304c82c1822a" kindref="member" tooltip="확장된 스트링길이 구하기(과  도 인식) ">StrLenEx</ref>(Hex)<sp/>:<sp/>HexLength;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>StringLen;<sp/>++i)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>Hex[i]<sp/>&amp;&amp;<sp/>Hex[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UintValue<sp/>&lt;&lt;=<sp/>4;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UintValue<sp/>|=<sp/>Hex[i]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>Hex[i]<sp/>&amp;&amp;<sp/>Hex[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UintValue<sp/>&lt;&lt;=<sp/>4;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UintValue<sp/>|=<sp/>Hex[i]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>Hex[i]<sp/>&amp;&amp;<sp/>Hex[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UintValue<sp/>&lt;&lt;=<sp/>4;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UintValue<sp/>|=<sp/>Hex[i]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UintValue;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="namespace_bx_util_global_1a159f4e68b9dc0b952782037990be93c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>_tmp_<sp/><ref refid="namespace_bx_util_global_1a159f4e68b9dc0b952782037990be93c2" kindref="member" tooltip="양수를 헥사덤프로 변환 ">ItoH</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsUpper,<sp/>uint<sp/>Value)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_storage<sp/>_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char)<sp/>*<sp/>(Length<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Result<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="namespace_bx_core_1_1_thread_1ac8200a15947866932b0851974b98257b" kindref="member" tooltip="현 스레드상의 저장소 개별연결(스레드수량 x 정적변수수량) ">BxCore::Thread::BindStorage</ref>(&amp;_);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result[Length]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>Length<sp/>-<sp/>1;<sp/>0<sp/>&lt;=<sp/>i;<sp/>--i)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Value<sp/>&amp;<sp/>0xF)<sp/>&lt;<sp/>10)<sp/>Result[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>(Value<sp/>&amp;<sp/>0xF);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Result[i]<sp/>=<sp/>((IsUpper)?<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>+<sp/>(Value<sp/>&amp;<sp/>0xF)<sp/>-<sp/>10;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Value<sp/>&gt;&gt;=<sp/>4)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Result[i];</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="namespace_bx_util_global_1a2aaf81ab8c431009a2f6d9f095c70e40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>_tmp_<sp/><ref refid="namespace_bx_util_global_1a2aaf81ab8c431009a2f6d9f095c70e40" kindref="member" tooltip="스트링을 대소문자 스트링으로 변환 ">AtoA</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsUpper,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>String,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StringLength<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StringLen<sp/>=<sp/>(StringLength<sp/>&lt;<sp/>0)?<sp/><ref refid="namespace_bx_util_global_1a39b70575037e5a54e79b304c82c1822a" kindref="member" tooltip="확장된 스트링길이 구하기(과  도 인식) ">StrLenEx</ref>(String)<sp/>:<sp/>StringLength;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_rw<sp/>Result<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BxSINGLETON(Result,<sp/>StringLen<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_util_global_1ab0ebe24132ef62727a0493664df7e8eb" kindref="member" tooltip="스트링 복사하기 ">StrCpy</ref>(Result,<sp/>String,<sp/>StringLen);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsUpper)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>StringLen;<sp/>++i)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>Result[i]<sp/>&amp;&amp;<sp/>Result[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result[i]<sp/>=<sp/>Result[i]<sp/>+<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>StringLen;<sp/>++i)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>Result[i]<sp/>&amp;&amp;<sp/>Result[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result[i]<sp/>=<sp/>Result[i]<sp/>+<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="namespace_bx_util_global_1a1779e753e6ac06f0b0538095c0ff0ca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a1779e753e6ac06f0b0538095c0ff0ca9" kindref="member" tooltip="데이터에서 로드(char) ">LoadInt8</ref>(byte*&amp;<sp/>Resource)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Result<sp/>=<sp/>(Resource[0]<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resource<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="namespace_bx_util_global_1a7eae0e60a7c0d68747315118d63c44d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a7eae0e60a7c0d68747315118d63c44d3" kindref="member" tooltip="데이터에서 로드(short) ">LoadInt16</ref>(byte*&amp;<sp/>Resource)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>Result<sp/>=<sp/>(Resource[0]<sp/>&amp;<sp/>0xFF)<sp/>|<sp/>((Resource[1]<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resource<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="namespace_bx_util_global_1af336f01897cb6e50d0347d5ba54aa968" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1af336f01897cb6e50d0347d5ba54aa968" kindref="member" tooltip="데이터에서 로드(int) ">LoadInt32</ref>(byte*&amp;<sp/>Resource)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Result<sp/>=<sp/>(Resource[0]<sp/>&amp;<sp/>0xFF)<sp/>|<sp/>((Resource[1]<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((Resource[2]<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((Resource[3]<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resource<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="563" refid="namespace_bx_util_global_1ae5e038296b7ac4d7e4929187d8106c13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>byte<sp/><ref refid="namespace_bx_util_global_1ae5e038296b7ac4d7e4929187d8106c13" kindref="member" tooltip="데이터에서 로드(byte) ">LoadUint8</ref>(byte*&amp;<sp/>Resource)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>Result<sp/>=<sp/>(Resource[0]<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resource<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="namespace_bx_util_global_1af2cc8a19541c23620fd82cc5f76ce048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ushort<sp/><ref refid="namespace_bx_util_global_1af2cc8a19541c23620fd82cc5f76ce048" kindref="member" tooltip="데이터에서 로드(ushort) ">LoadUint16</ref>(byte*&amp;<sp/>Resource)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ushort<sp/>Result<sp/>=<sp/>(Resource[0]<sp/>&amp;<sp/>0xFF)<sp/>|<sp/>((Resource[1]<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resource<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="namespace_bx_util_global_1a49fe224b36cf92615d28ca70e38d9257" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="namespace_bx_util_global_1a49fe224b36cf92615d28ca70e38d9257" kindref="member" tooltip="데이터에서 로드(uint) ">LoadUint32</ref>(byte*&amp;<sp/>Resource)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>Result<sp/>=<sp/>(Resource[0]<sp/>&amp;<sp/>0xFF)<sp/>|<sp/>((Resource[1]<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((Resource[2]<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((Resource[3]<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resource<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="namespace_bx_util_global_1ad1297c7c4fa7a887810713a0ab541400" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1ad1297c7c4fa7a887810713a0ab541400" kindref="member" tooltip="데이터에서 바이트배열 로드(uint) ">LoadBytes</ref>(byte*&amp;<sp/>Resource,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>Dest,<sp/>uint<sp/>Length)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(Dest,<sp/>Resource,<sp/>Length);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resource<sp/>+=<sp/>Length;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="namespace_bx_util_global_1aa3ddb995529bff12b689a073cd518e67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="namespace_bx_util_global_1aa3ddb995529bff12b689a073cd518e67" kindref="member" tooltip="데이터에서 비트배열 로드(uint) ">LoadBits</ref>(byte*&amp;<sp/>Resource,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>CurrentBit,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BitCount)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>Result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BitCount;<sp/>++i)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>|=<sp/>((*Resource<sp/>&gt;&gt;<sp/>CurrentBit)<sp/>&amp;<sp/>0x1)<sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(++CurrentBit<sp/>&amp;<sp/>0x7))</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentBit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++Resource;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="namespace_bx_util_global_1a5bd37d311b067ed2ac52c3443363013f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>byte*<sp/><ref refid="namespace_bx_util_global_1a5bd37d311b067ed2ac52c3443363013f" kindref="member" tooltip="데이터에서 임의배열 로드 ">LoadType</ref>(byte*&amp;<sp/>Resource,<sp/>uint<sp/>TypeLen)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte*<sp/>Result<sp/>=<sp/>Resource;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Resource<sp/>+=<sp/>TypeLen;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="namespace_bx_util_global_1a956f04e1f763eddd08c74f1bf301c05f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a956f04e1f763eddd08c74f1bf301c05f" kindref="member" tooltip="데이터에서 스트링 로드 ">LoadString</ref>(byte*&amp;<sp/>Resource)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/><ref refid="namespace_bx_util_global_1a7eae0e60a7c0d68747315118d63c44d3" kindref="member" tooltip="데이터에서 로드(short) ">LoadInt16</ref>(Resource);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_rw<sp/>Chars<sp/>=<sp/>(string_rw)<sp/><ref refid="namespace_bx_util_global_1ad0d73de4f241c8cd6b2a89cf95570d43" kindref="member" tooltip="스트링 할당 ">StrAlloc</ref>(Length);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_util_global_1ad1297c7c4fa7a887810713a0ab541400" kindref="member" tooltip="데이터에서 바이트배열 로드(uint) ">LoadBytes</ref>(Resource,<sp/>Chars,<sp/>Length);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Chars[Length]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Chars;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="663" refid="namespace_bx_util_global_1a8bc0de550dfeda13d1a2bb85e7d55590" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_bx_util_global_1a8bc0de550dfeda13d1a2bb85e7d55590" kindref="member" tooltip="상수나열로 배열을 초기화 ">SetArray</ref>(TYPE*<sp/>Dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bx_throw" kindref="compound" tooltip="가변인자 제공 ">BxThrow</ref>&amp;<sp/>Src)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>iend<sp/>=<sp/>Src.<ref refid="class_bx_throw_1a7704438cd213692aa50b8adbb547cfe9" kindref="member" tooltip="데이터길이 가져오기 ">Length</ref>();<sp/>i<sp/>&lt;<sp/>iend;<sp/>++i)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dst[i]<sp/>=<sp/>*Src.<ref refid="class_bx_throw_1aa501b1854bd258ec7263fc6d7e7bb6be" kindref="member" tooltip="데이터 접근하기 ">Access</ref>&lt;TYPE&gt;(i);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="class_bx_util" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_bx_util" kindref="compound" tooltip="각종 수학/물리모듈 제공 ">BxUtil</ref></highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="679" refid="class_bx_util_1a0940d3fda4c6f5a425e2043708f7145f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a0940d3fda4c6f5a425e2043708f7145f" kindref="member" tooltip="랜덤함수 초기화 ">SetRandom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>Seed)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SetRand(Seed);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RandomTable(i)<sp/>=<sp/>(_MakeRand()<sp/>&lt;&lt;<sp/>30)<sp/>|<sp/>(_MakeRand()<sp/>&lt;&lt;<sp/>15)<sp/>|<sp/>_MakeRand();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="class_bx_util_1a5c3ac899f819d98214f9f3345ac5bd87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_bx_util_1a5c3ac899f819d98214f9f3345ac5bd87" kindref="member" tooltip="랜덤값 구하기 ">GetRandom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Key<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Key<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_MakeRand()<sp/>&lt;&lt;<sp/>30)<sp/>|<sp/>(_MakeRand()<sp/>&lt;&lt;<sp/>15)<sp/>|<sp/>_MakeRand();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RandomTable(Key<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="class_bx_util_1a5263a4d55543963e06caf13351a948c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a5263a4d55543963e06caf13351a948c0" kindref="member" tooltip="구간내 랜덤값 구하기 ">GetValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MinValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Key<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MinValue<sp/>+<sp/>(<ref refid="class_bx_util_1a5c3ac899f819d98214f9f3345ac5bd87" kindref="member" tooltip="랜덤값 구하기 ">GetRandom</ref>(Key)<sp/>%<sp/>(MaxValue<sp/>-<sp/>MinValue<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="class_bx_util_1a4263eae18eb8e802e1a00142e1b3689f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a4263eae18eb8e802e1a00142e1b3689f" kindref="member" tooltip="각도내 랜덤값 구하기 ">GetValueAngle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MinValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Key<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(180<sp/>&lt;<sp/>MaxValue<sp/>-<sp/>MinValue)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MaxValue<sp/>+<sp/>(<ref refid="class_bx_util_1a5c3ac899f819d98214f9f3345ac5bd87" kindref="member" tooltip="랜덤값 구하기 ">GetRandom</ref>(Key)<sp/>%<sp/>(360<sp/>-<sp/>MaxValue<sp/>+<sp/>MinValue<sp/>+<sp/>1)))<sp/>%<sp/>360;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a5263a4d55543963e06caf13351a948c0" kindref="member" tooltip="구간내 랜덤값 구하기 ">GetValue</ref>(MinValue,<sp/>MaxValue,<sp/>Key)<sp/>%<sp/>360;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="class_bx_util_1a1d0271ff4863c0b8fbe8b7f9c1076653" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>fint<sp/><ref refid="class_bx_util_1a1d0271ff4863c0b8fbe8b7f9c1076653" kindref="member" tooltip="Cos값 구하기 ">Cos</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Angle1024)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Angle1024<sp/>=<sp/>Angle1024<sp/>&amp;<sp/>0x3FF;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BxCore::Util::Cos1024Table()[Angle90<sp/>-<sp/><ref refid="namespace_bx_util_global_1a488ff490d994d4173653ee396893d5b9" kindref="member" tooltip="절대값 구하기 ">BxUtilGlobal::Abs</ref>((Angle1024<sp/>&amp;<sp/>0x1FF)<sp/>-<sp/>Angle90)]</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((((Angle1024<sp/>+<sp/>Angle270<sp/>-<sp/>1)<sp/>&amp;<sp/>0x3FF)<sp/>&lt;<sp/>Angle180)?<sp/>-1<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="class_bx_util_1a19bef9b1c3c37b263ad5d68a9fb710d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>fint<sp/><ref refid="class_bx_util_1a19bef9b1c3c37b263ad5d68a9fb710d0" kindref="member" tooltip="Sin값 구하기 ">Sin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Angle1024)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a1d0271ff4863c0b8fbe8b7f9c1076653" kindref="member" tooltip="Cos값 구하기 ">Cos</ref>(Angle1024<sp/>+<sp/>Angle270);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="class_bx_util_1a3882d50474b76769b82316e8666150a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a3882d50474b76769b82316e8666150a1" kindref="member" tooltip="방향으로 각도 구하기 ">GetAngle1024</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>VectorX,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>VectorY)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(VectorX<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(VectorY<sp/>&lt;<sp/>0)?<sp/>Angle270<sp/>:<sp/>Angle90;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Angle1024<sp/>=<sp/>-1,<sp/>Tan1024<sp/>=<sp/><ref refid="namespace_bx_util_global_1a488ff490d994d4173653ee396893d5b9" kindref="member" tooltip="절대값 구하기 ">BxUtilGlobal::Abs</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((((huge)<sp/>VectorY)<sp/>&lt;&lt;<sp/>16)<sp/>/<sp/>((huge)<sp/>VectorX)));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(++Angle1024<sp/>&lt;<sp/>Angle90<sp/>&amp;&amp;<sp/>BxCore::Util::Tan1024Table()[Angle1024]<sp/>&lt;=<sp/>Tan1024);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x3FF<sp/>&amp;<sp/>(((VectorY<sp/>&lt;<sp/>0)?<sp/>Angle180<sp/>:<sp/>0)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(((VectorX<sp/>&lt;<sp/>0)<sp/>==<sp/>(VectorY<sp/>&lt;<sp/>0))?<sp/>Angle1024<sp/>:<sp/>Angle180<sp/>-<sp/>Angle1024));</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="class_bx_util_1a147df2b368fe0381b9b46ea850d6f916" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a147df2b368fe0381b9b46ea850d6f916" kindref="member" tooltip="점 3개의 방향성 값을 확인 ">GetClockwiseValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>&amp;<sp/>Start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>&amp;<sp/>End,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>&amp;<sp/>Src)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Start.x<sp/>-<sp/>End.x)<sp/>*<sp/>(Src.y<sp/>-<sp/>End.y)<sp/>-<sp/>(Start.y<sp/>-<sp/>End.y)<sp/>*<sp/>(Src.x<sp/>-<sp/>End.x);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="class_bx_util_1ac2142bb22ed2a2f45df5b2d56b723fea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1ac2142bb22ed2a2f45df5b2d56b723fea" kindref="member" tooltip="단위행렬화 ">MatrixInit</ref>(<ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref><sp/>_out_<sp/>Dst)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1a86d9f355240f547de643ac1dcbb2ed08" kindref="member" tooltip="메모리 초기화 ">BxCore::Util::MemSet</ref>(&amp;Dst,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref>));</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dst.m[0][0]<sp/>=<sp/>Dst.m[1][1]<sp/>=<sp/>Dst.m[2][2]<sp/>=<sp/>Dst.m[3][3]<sp/>=<sp/>ItoF(1);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="class_bx_util_1a414a342d29fef93a2264fd53314a0645" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a414a342d29fef93a2264fd53314a0645" kindref="member" tooltip="행렬에 행렬곱하기 ">MatrixCombine</ref>(<ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref><sp/>_inout_<sp/>Dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref><sp/>_in_<sp/>Src)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref><sp/>Result;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1a86d9f355240f547de643ac1dcbb2ed08" kindref="member" tooltip="메모리 초기화 ">BxCore::Util::MemSet</ref>(&amp;Result,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref>));</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][0]<sp/>+=<sp/>(Dst.m[0][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][0]<sp/>+=<sp/>(Dst.m[0][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][0]<sp/>+=<sp/>(Dst.m[0][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][0]<sp/>+=<sp/>(Dst.m[0][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][1]<sp/>+=<sp/>(Dst.m[0][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][1]<sp/>+=<sp/>(Dst.m[0][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][1]<sp/>+=<sp/>(Dst.m[0][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][1]<sp/>+=<sp/>(Dst.m[0][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][2]<sp/>+=<sp/>(Dst.m[0][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][2]<sp/>+=<sp/>(Dst.m[0][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][2]<sp/>+=<sp/>(Dst.m[0][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][2]<sp/>+=<sp/>(Dst.m[0][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][3]<sp/>+=<sp/>(Dst.m[0][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][3]<sp/>+=<sp/>(Dst.m[0][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][3]<sp/>+=<sp/>(Dst.m[0][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][3]<sp/>+=<sp/>(Dst.m[0][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][0]<sp/>+=<sp/>(Dst.m[1][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][0]<sp/>+=<sp/>(Dst.m[1][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][0]<sp/>+=<sp/>(Dst.m[1][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][0]<sp/>+=<sp/>(Dst.m[1][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][1]<sp/>+=<sp/>(Dst.m[1][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][1]<sp/>+=<sp/>(Dst.m[1][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][1]<sp/>+=<sp/>(Dst.m[1][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][1]<sp/>+=<sp/>(Dst.m[1][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][2]<sp/>+=<sp/>(Dst.m[1][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][2]<sp/>+=<sp/>(Dst.m[1][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][2]<sp/>+=<sp/>(Dst.m[1][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][2]<sp/>+=<sp/>(Dst.m[1][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][3]<sp/>+=<sp/>(Dst.m[1][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][3]<sp/>+=<sp/>(Dst.m[1][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][3]<sp/>+=<sp/>(Dst.m[1][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][3]<sp/>+=<sp/>(Dst.m[1][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][0]<sp/>+=<sp/>(Dst.m[2][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][0]<sp/>+=<sp/>(Dst.m[2][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][0]<sp/>+=<sp/>(Dst.m[2][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][0]<sp/>+=<sp/>(Dst.m[2][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][1]<sp/>+=<sp/>(Dst.m[2][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][1]<sp/>+=<sp/>(Dst.m[2][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][1]<sp/>+=<sp/>(Dst.m[2][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][1]<sp/>+=<sp/>(Dst.m[2][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][2]<sp/>+=<sp/>(Dst.m[2][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][2]<sp/>+=<sp/>(Dst.m[2][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][2]<sp/>+=<sp/>(Dst.m[2][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][2]<sp/>+=<sp/>(Dst.m[2][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][3]<sp/>+=<sp/>(Dst.m[2][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][3]<sp/>+=<sp/>(Dst.m[2][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][3]<sp/>+=<sp/>(Dst.m[2][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][3]<sp/>+=<sp/>(Dst.m[2][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][0]<sp/>+=<sp/>(Dst.m[3][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][0]<sp/>+=<sp/>(Dst.m[3][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][0]<sp/>+=<sp/>(Dst.m[3][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][0]<sp/>+=<sp/>(Dst.m[3][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][0])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][1]<sp/>+=<sp/>(Dst.m[3][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][1]<sp/>+=<sp/>(Dst.m[3][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][1]<sp/>+=<sp/>(Dst.m[3][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][1]<sp/>+=<sp/>(Dst.m[3][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][1])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][2]<sp/>+=<sp/>(Dst.m[3][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][2]<sp/>+=<sp/>(Dst.m[3][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][2]<sp/>+=<sp/>(Dst.m[3][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][2]<sp/>+=<sp/>(Dst.m[3][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][2])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][3]<sp/>+=<sp/>(Dst.m[3][0]<sp/>*<sp/>(huge)<sp/>Src.m[0][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][3]<sp/>+=<sp/>(Dst.m[3][1]<sp/>*<sp/>(huge)<sp/>Src.m[1][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][3]<sp/>+=<sp/>(Dst.m[3][2]<sp/>*<sp/>(huge)<sp/>Src.m[2][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][3]<sp/>+=<sp/>(Dst.m[3][3]<sp/>*<sp/>(huge)<sp/>Src.m[3][3])<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(&amp;Dst,<sp/>&amp;Result,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref>));</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="class_bx_util_1ae15d759d6643cd9ed4382a76308b831d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1ae15d759d6643cd9ed4382a76308b831d" kindref="member" tooltip="행렬에 행렬곱하기 ">MatrixCombine</ref>(<ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref><sp/>_inout_<sp/>Dst,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src00,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src10,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src20,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src30,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src01,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src11,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src21,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src31,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src02,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src12,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src22,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src32,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src03,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src13,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src23,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>_in_<sp/>Src33)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref><sp/>Result;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1a86d9f355240f547de643ac1dcbb2ed08" kindref="member" tooltip="메모리 초기화 ">BxCore::Util::MemSet</ref>(&amp;Result,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref>));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][0]<sp/>+=<sp/>(Dst.m[0][0]<sp/>*<sp/>(huge)<sp/>Src00)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][0]<sp/>+=<sp/>(Dst.m[0][1]<sp/>*<sp/>(huge)<sp/>Src10)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][0]<sp/>+=<sp/>(Dst.m[0][2]<sp/>*<sp/>(huge)<sp/>Src20)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][0]<sp/>+=<sp/>(Dst.m[0][3]<sp/>*<sp/>(huge)<sp/>Src30)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][1]<sp/>+=<sp/>(Dst.m[0][0]<sp/>*<sp/>(huge)<sp/>Src01)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][1]<sp/>+=<sp/>(Dst.m[0][1]<sp/>*<sp/>(huge)<sp/>Src11)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][1]<sp/>+=<sp/>(Dst.m[0][2]<sp/>*<sp/>(huge)<sp/>Src21)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][1]<sp/>+=<sp/>(Dst.m[0][3]<sp/>*<sp/>(huge)<sp/>Src31)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][2]<sp/>+=<sp/>(Dst.m[0][0]<sp/>*<sp/>(huge)<sp/>Src02)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][2]<sp/>+=<sp/>(Dst.m[0][1]<sp/>*<sp/>(huge)<sp/>Src12)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][2]<sp/>+=<sp/>(Dst.m[0][2]<sp/>*<sp/>(huge)<sp/>Src22)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][2]<sp/>+=<sp/>(Dst.m[0][3]<sp/>*<sp/>(huge)<sp/>Src32)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][3]<sp/>+=<sp/>(Dst.m[0][0]<sp/>*<sp/>(huge)<sp/>Src03)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][3]<sp/>+=<sp/>(Dst.m[0][1]<sp/>*<sp/>(huge)<sp/>Src13)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][3]<sp/>+=<sp/>(Dst.m[0][2]<sp/>*<sp/>(huge)<sp/>Src23)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[0][3]<sp/>+=<sp/>(Dst.m[0][3]<sp/>*<sp/>(huge)<sp/>Src33)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][0]<sp/>+=<sp/>(Dst.m[1][0]<sp/>*<sp/>(huge)<sp/>Src00)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][0]<sp/>+=<sp/>(Dst.m[1][1]<sp/>*<sp/>(huge)<sp/>Src10)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][0]<sp/>+=<sp/>(Dst.m[1][2]<sp/>*<sp/>(huge)<sp/>Src20)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][0]<sp/>+=<sp/>(Dst.m[1][3]<sp/>*<sp/>(huge)<sp/>Src30)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][1]<sp/>+=<sp/>(Dst.m[1][0]<sp/>*<sp/>(huge)<sp/>Src01)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][1]<sp/>+=<sp/>(Dst.m[1][1]<sp/>*<sp/>(huge)<sp/>Src11)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][1]<sp/>+=<sp/>(Dst.m[1][2]<sp/>*<sp/>(huge)<sp/>Src21)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][1]<sp/>+=<sp/>(Dst.m[1][3]<sp/>*<sp/>(huge)<sp/>Src31)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][2]<sp/>+=<sp/>(Dst.m[1][0]<sp/>*<sp/>(huge)<sp/>Src02)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][2]<sp/>+=<sp/>(Dst.m[1][1]<sp/>*<sp/>(huge)<sp/>Src12)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][2]<sp/>+=<sp/>(Dst.m[1][2]<sp/>*<sp/>(huge)<sp/>Src22)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][2]<sp/>+=<sp/>(Dst.m[1][3]<sp/>*<sp/>(huge)<sp/>Src32)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][3]<sp/>+=<sp/>(Dst.m[1][0]<sp/>*<sp/>(huge)<sp/>Src03)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][3]<sp/>+=<sp/>(Dst.m[1][1]<sp/>*<sp/>(huge)<sp/>Src13)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][3]<sp/>+=<sp/>(Dst.m[1][2]<sp/>*<sp/>(huge)<sp/>Src23)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[1][3]<sp/>+=<sp/>(Dst.m[1][3]<sp/>*<sp/>(huge)<sp/>Src33)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][0]<sp/>+=<sp/>(Dst.m[2][0]<sp/>*<sp/>(huge)<sp/>Src00)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][0]<sp/>+=<sp/>(Dst.m[2][1]<sp/>*<sp/>(huge)<sp/>Src10)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][0]<sp/>+=<sp/>(Dst.m[2][2]<sp/>*<sp/>(huge)<sp/>Src20)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][0]<sp/>+=<sp/>(Dst.m[2][3]<sp/>*<sp/>(huge)<sp/>Src30)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][1]<sp/>+=<sp/>(Dst.m[2][0]<sp/>*<sp/>(huge)<sp/>Src01)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][1]<sp/>+=<sp/>(Dst.m[2][1]<sp/>*<sp/>(huge)<sp/>Src11)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][1]<sp/>+=<sp/>(Dst.m[2][2]<sp/>*<sp/>(huge)<sp/>Src21)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][1]<sp/>+=<sp/>(Dst.m[2][3]<sp/>*<sp/>(huge)<sp/>Src31)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][2]<sp/>+=<sp/>(Dst.m[2][0]<sp/>*<sp/>(huge)<sp/>Src02)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][2]<sp/>+=<sp/>(Dst.m[2][1]<sp/>*<sp/>(huge)<sp/>Src12)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][2]<sp/>+=<sp/>(Dst.m[2][2]<sp/>*<sp/>(huge)<sp/>Src22)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][2]<sp/>+=<sp/>(Dst.m[2][3]<sp/>*<sp/>(huge)<sp/>Src32)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][3]<sp/>+=<sp/>(Dst.m[2][0]<sp/>*<sp/>(huge)<sp/>Src03)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][3]<sp/>+=<sp/>(Dst.m[2][1]<sp/>*<sp/>(huge)<sp/>Src13)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][3]<sp/>+=<sp/>(Dst.m[2][2]<sp/>*<sp/>(huge)<sp/>Src23)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[2][3]<sp/>+=<sp/>(Dst.m[2][3]<sp/>*<sp/>(huge)<sp/>Src33)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][0]<sp/>+=<sp/>(Dst.m[3][0]<sp/>*<sp/>(huge)<sp/>Src00)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][0]<sp/>+=<sp/>(Dst.m[3][1]<sp/>*<sp/>(huge)<sp/>Src10)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][0]<sp/>+=<sp/>(Dst.m[3][2]<sp/>*<sp/>(huge)<sp/>Src20)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][0]<sp/>+=<sp/>(Dst.m[3][3]<sp/>*<sp/>(huge)<sp/>Src30)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][1]<sp/>+=<sp/>(Dst.m[3][0]<sp/>*<sp/>(huge)<sp/>Src01)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][1]<sp/>+=<sp/>(Dst.m[3][1]<sp/>*<sp/>(huge)<sp/>Src11)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][1]<sp/>+=<sp/>(Dst.m[3][2]<sp/>*<sp/>(huge)<sp/>Src21)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][1]<sp/>+=<sp/>(Dst.m[3][3]<sp/>*<sp/>(huge)<sp/>Src31)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][2]<sp/>+=<sp/>(Dst.m[3][0]<sp/>*<sp/>(huge)<sp/>Src02)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][2]<sp/>+=<sp/>(Dst.m[3][1]<sp/>*<sp/>(huge)<sp/>Src12)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][2]<sp/>+=<sp/>(Dst.m[3][2]<sp/>*<sp/>(huge)<sp/>Src22)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][2]<sp/>+=<sp/>(Dst.m[3][3]<sp/>*<sp/>(huge)<sp/>Src32)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][3]<sp/>+=<sp/>(Dst.m[3][0]<sp/>*<sp/>(huge)<sp/>Src03)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][3]<sp/>+=<sp/>(Dst.m[3][1]<sp/>*<sp/>(huge)<sp/>Src13)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][3]<sp/>+=<sp/>(Dst.m[3][2]<sp/>*<sp/>(huge)<sp/>Src23)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.m[3][3]<sp/>+=<sp/>(Dst.m[3][3]<sp/>*<sp/>(huge)<sp/>Src33)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(&amp;Dst,<sp/>&amp;Result,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref>));</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="943" refid="class_bx_util_1acee0f9a5a21762b01d8a0fa354785091" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1acee0f9a5a21762b01d8a0fa354785091" kindref="member" tooltip="행렬의 회전변환(쿼터니언) ">MatrixRotateQ</ref>(<ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref><sp/>_inout_<sp/>Dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structquater" kindref="compound" tooltip="quater구조체 : x, y, z, angle1024 ">quater</ref><sp/>_in_<sp/>Src)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>huge<sp/>Hx<sp/>=<sp/>ItoF(Src.x),<sp/>Hy<sp/>=<sp/>ItoF(Src.y),<sp/>Hz<sp/>=<sp/>ItoF(Src.z);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>Scalar<sp/>=<sp/>(fint)<sp/><ref refid="namespace_bx_util_global_1a0732d3795e4787d47c7ac63e74c083ab" kindref="member" tooltip="64비트 제곱근값 구하기 ">BxUtilGlobal::Sqrt64</ref>(Hx<sp/>*<sp/>Hx<sp/>+<sp/>Hy<sp/>*<sp/>Hy<sp/>+<sp/>Hz<sp/>*<sp/>Hz);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>huge<sp/>x<sp/>=<sp/>Hx<sp/>*<sp/><ref refid="class_bx_util_1a19bef9b1c3c37b263ad5d68a9fb710d0" kindref="member" tooltip="Sin값 구하기 ">BxUtil::Sin</ref>(Src.angle1024<sp/>/<sp/>2)<sp/>/<sp/>Scalar;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>huge<sp/>y<sp/>=<sp/>Hy<sp/>*<sp/><ref refid="class_bx_util_1a19bef9b1c3c37b263ad5d68a9fb710d0" kindref="member" tooltip="Sin값 구하기 ">BxUtil::Sin</ref>(Src.angle1024<sp/>/<sp/>2)<sp/>/<sp/>Scalar;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>huge<sp/>z<sp/>=<sp/>Hz<sp/>*<sp/><ref refid="class_bx_util_1a19bef9b1c3c37b263ad5d68a9fb710d0" kindref="member" tooltip="Sin값 구하기 ">BxUtil::Sin</ref>(Src.angle1024<sp/>/<sp/>2)<sp/>/<sp/>Scalar;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>huge<sp/>w<sp/>=<sp/><ref refid="class_bx_util_1a1d0271ff4863c0b8fbe8b7f9c1076653" kindref="member" tooltip="Cos값 구하기 ">BxUtil::Cos</ref>(Src.angle1024<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>xx<sp/>=<sp/>(fint)<sp/>((x<sp/>*<sp/>x)<sp/>&gt;&gt;<sp/>16),<sp/>yy<sp/>=<sp/>(fint)<sp/>((y<sp/>*<sp/>y)<sp/>&gt;&gt;<sp/>16),<sp/>zz<sp/>=<sp/>(fint)<sp/>((z<sp/>*<sp/>z)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>xy<sp/>=<sp/>(fint)<sp/>((x<sp/>*<sp/>y)<sp/>&gt;&gt;<sp/>16),<sp/>yz<sp/>=<sp/>(fint)<sp/>((y<sp/>*<sp/>z)<sp/>&gt;&gt;<sp/>16),<sp/>zx<sp/>=<sp/>(fint)<sp/>((z<sp/>*<sp/>x)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>xw<sp/>=<sp/>(fint)<sp/>((x<sp/>*<sp/>w)<sp/>&gt;&gt;<sp/>16),<sp/>yw<sp/>=<sp/>(fint)<sp/>((y<sp/>*<sp/>w)<sp/>&gt;&gt;<sp/>16),<sp/>zw<sp/>=<sp/>(fint)<sp/>((z<sp/>*<sp/>w)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a414a342d29fef93a2264fd53314a0645" kindref="member" tooltip="행렬에 행렬곱하기 ">MatrixCombine</ref>(Dst,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItoF(1)<sp/>-<sp/>2<sp/>*<sp/>(yy<sp/>+<sp/>zz),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(xy<sp/>+<sp/>zw),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(zx<sp/>-<sp/>yw),<sp/>0,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(xy<sp/>-<sp/>zw),<sp/>ItoF(1)<sp/>-<sp/>2<sp/>*<sp/>(xx<sp/>+<sp/>zz),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(yz<sp/>+<sp/>xw),<sp/>0,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(zx<sp/>+<sp/>yw),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(yz<sp/>-<sp/>xw),<sp/>ItoF(1)<sp/>-<sp/>2<sp/>*<sp/>(xx<sp/>+<sp/>yy),<sp/>0,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItoF(1));</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="class_bx_util_1a0abbd37b71ecc2aa9556dd38323677ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a0abbd37b71ecc2aa9556dd38323677ae" kindref="member" tooltip="버텍스에 행렬곱하기 ">MatrixApply</ref>(<ref refid="structvertex" kindref="compound" tooltip="vertex구조체 : x, y, z, nouse(구조체2승수맞춤) ">vertex</ref><sp/>_inout_<sp/>Dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmatrix" kindref="compound" tooltip="matrix구조체 : m[4][4] ">matrix</ref><sp/>_in_<sp/>Src)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvertex" kindref="compound" tooltip="vertex구조체 : x, y, z, nouse(구조체2승수맞춤) ">vertex</ref><sp/>Result;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.x<sp/>=<sp/>FtoI(Src.m[0][0]<sp/>*<sp/>Dst.x<sp/>+<sp/>Src.m[0][1]<sp/>*<sp/>Dst.y<sp/>+<sp/>Src.m[0][2]<sp/>*<sp/>Dst.z<sp/>+<sp/>Src.m[0][3]);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.y<sp/>=<sp/>FtoI(Src.m[1][0]<sp/>*<sp/>Dst.x<sp/>+<sp/>Src.m[1][1]<sp/>*<sp/>Dst.y<sp/>+<sp/>Src.m[1][2]<sp/>*<sp/>Dst.z<sp/>+<sp/>Src.m[1][3]);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.z<sp/>=<sp/>FtoI(Src.m[2][0]<sp/>*<sp/>Dst.x<sp/>+<sp/>Src.m[2][1]<sp/>*<sp/>Dst.y<sp/>+<sp/>Src.m[2][2]<sp/>*<sp/>Dst.z<sp/>+<sp/>Src.m[2][3]);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(&amp;Dst,<sp/>&amp;Result,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structvertex" kindref="compound" tooltip="vertex구조체 : x, y, z, nouse(구조체2승수맞춤) ">vertex</ref>));</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="983" refid="class_bx_util_1a67d75745d20650033cb419129baaaed8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a67d75745d20650033cb419129baaaed8" kindref="member" tooltip="CP949를 UTF16으로 전환 ">CP949ToUTF16</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>cp949,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp949length,<sp/>wstring_rw<sp/>utf16,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf16length)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cp949length<sp/>&lt;<sp/>0)<sp/>cp949length<sp/>=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utf16length<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte*<sp/>utf16bytes<sp/>=<sp/>(byte*)<sp/>utf16;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf16focus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>cp949[i]<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>cp949length<sp/>&amp;&amp;<sp/>utf16focus<sp/>&lt;<sp/>utf16length;<sp/>++i)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(cp949[i]<sp/>&amp;<sp/>0x80))</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wchar<sp/>onechar<sp/>=<sp/>CP949ToUTF16_Search(cp949[i]);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utf16bytes[utf16focus++]<sp/>=<sp/>(byte)(onechar<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utf16bytes[utf16focus++]<sp/>=<sp/>(byte)(onechar<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cp949[++i]<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>cp949length)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wchar<sp/>onechar<sp/>=<sp/>CP949ToUTF16_Search(cp949[i<sp/>-<sp/>1],<sp/>cp949[i]);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utf16bytes[utf16focus++]<sp/>=<sp/>(byte)(onechar<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utf16bytes[utf16focus++]<sp/>=<sp/>(byte)(onechar<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utf16bytes[utf16focus++]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utf16bytes[utf16focus]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utf16focus<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017" refid="class_bx_util_1afd59076fe1010b645d232f24fa34e84e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1afd59076fe1010b645d232f24fa34e84e" kindref="member" tooltip="UTF16를 CP949로 전환 ">UTF16ToCP949</ref>(wstring<sp/>utf16,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf16length,<sp/>string_rw<sp/>cp949,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp949length)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(utf16length<sp/>&lt;<sp/>0)<sp/>utf16length<sp/>=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>utf16length<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte*<sp/>utf16bytes<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte*)<sp/>utf16;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp949focus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>(utf16bytes[i]<sp/>||<sp/>utf16bytes[i<sp/>+<sp/>1])<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>utf16length<sp/>&amp;&amp;<sp/>cp949focus<sp/>&lt;<sp/>cp949length;<sp/>i<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Result<sp/>=<sp/>UTF16ToCP949_Search((utf16bytes[i]<sp/>&amp;<sp/>0xFF)<sp/>|<sp/>(utf16bytes[i<sp/>+<sp/>1]<sp/>&lt;&lt;<sp/>8));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp949[cp949focus++]<sp/>=<sp/>Result[0];</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Result[0]<sp/>&amp;<sp/>0x80)<sp/>&amp;&amp;<sp/>cp949focus<sp/>&lt;<sp/>cp949length)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp949[cp949focus++]<sp/>=<sp/>Result[1];</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp949[cp949focus]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cp949focus;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041" refid="class_bx_util_1ace58b8597a34f4d9b9ab4f27b4f48dde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1ace58b8597a34f4d9b9ab4f27b4f48dde" kindref="member" tooltip="UTF16를 UTF8로 전환 ">UTF16ToUTF8</ref>(wstring<sp/>utf16,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf16length,<sp/>string_rw<sp/>utf8)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(utf16length<sp/>&lt;<sp/>0)<sp/>utf16length<sp/>=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>utf16length<sp/>&amp;&amp;<sp/>utf16[i];<sp/>++i)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf16[i]<sp/>&amp;<sp/>0xFF80)<sp/>==<sp/>0x0000)<sp/></highlight><highlight class="comment">//<sp/>Ascii</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>utf16[i]<sp/>&amp;<sp/>0x00FF;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf16[i]<sp/>&amp;<sp/>0xF800)<sp/>==<sp/>0x0000)<sp/></highlight><highlight class="comment">//<sp/>2Bytes-Less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>0xC0<sp/>|<sp/>((utf16[i]<sp/>&amp;<sp/>0x07C0)<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>0x80<sp/>|<sp/>(utf16[i]<sp/>&amp;<sp/>0x003F);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf16[i]<sp/>&amp;<sp/>0xFC00)<sp/>==<sp/>0xD800<sp/>&amp;&amp;<sp/>(utf16[i<sp/>+<sp/>1]<sp/>&amp;<sp/>0xFC00)<sp/>==<sp/>0xDC00)<sp/></highlight><highlight class="comment">//<sp/>4Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wchar<sp/>U_Value<sp/>=<sp/>((utf16[i]<sp/>&amp;<sp/>0x03C0)<sp/>&gt;&gt;<sp/>6)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>0xF0<sp/>|<sp/>((U_Value<sp/>&amp;<sp/>0x001C)<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>0x80<sp/>|<sp/>((U_Value<sp/>&amp;<sp/>0x0003)<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>((utf16[i]<sp/>&amp;<sp/>0x003C)<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>0x80<sp/>|<sp/>((utf16[i]<sp/>&amp;<sp/>0x0003)<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>((utf16[i<sp/>+<sp/>1]<sp/>&amp;<sp/>0x03C0)<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>0x80<sp/>|<sp/>(utf16[i<sp/>+<sp/>1]<sp/>&amp;<sp/>0x003F);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>2Bytes-Full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>0xE0<sp/>|<sp/>((utf16[i]<sp/>&amp;<sp/>0xF000)<sp/>&gt;&gt;<sp/>12);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>0x80<sp/>|<sp/>((utf16[i]<sp/>&amp;<sp/>0x0FC0)<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf8++)<sp/>=<sp/>0x80<sp/>|<sp/>(utf16[i]<sp/>&amp;<sp/>0x003F);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078" refid="class_bx_util_1a641e1bebe3972ac651d08b6890d76fb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a641e1bebe3972ac651d08b6890d76fb0" kindref="member" tooltip="UTF8을 UTF16으로 전환 ">UTF8ToUTF16</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>utf8,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf8length,<sp/>wstring_rw<sp/>utf16)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(utf8length<sp/>&lt;<sp/>0)<sp/>utf8length<sp/>=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>utf8length<sp/>&amp;&amp;<sp/>utf8[i];<sp/>++i)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf8[i]<sp/>&amp;<sp/>0xF8)<sp/>==<sp/>0xF0)<sp/></highlight><highlight class="comment">//<sp/>4Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>W_Value<sp/>=<sp/>(((utf8[i]<sp/>&amp;<sp/>0x07)<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>((utf8[i<sp/>+<sp/>1]<sp/>&amp;<sp/>0x30)<sp/>&gt;&gt;<sp/>4))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf16++)<sp/>=<sp/>0xD800<sp/>|<sp/>(W_Value<sp/>&lt;&lt;<sp/>6)<sp/>|<sp/>((utf8[i<sp/>+<sp/>1]<sp/>&amp;<sp/>0x0F)<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>((utf8[i<sp/>+<sp/>2]<sp/>&amp;<sp/>0x30)<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf16++)<sp/>=<sp/>0xDC00<sp/>|<sp/>((utf8[i<sp/>+<sp/>2]<sp/>&amp;<sp/>0x0F)<sp/>&lt;&lt;<sp/>6)<sp/>|<sp/>(utf8[i<sp/>+<sp/>3]<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf8[i]<sp/>&amp;<sp/>0xF0)<sp/>==<sp/>0xE0)<sp/></highlight><highlight class="comment">//<sp/>3Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf16++)<sp/>=<sp/>((utf8[i]<sp/>&amp;<sp/>0x0F)<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>((utf8[i<sp/>+<sp/>1]<sp/>&amp;<sp/>0x3F)<sp/>&lt;&lt;<sp/>6)<sp/>|<sp/>(utf8[i<sp/>+<sp/>2]<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf8[i]<sp/>&amp;<sp/>0xE0)<sp/>==<sp/>0xC0)<sp/></highlight><highlight class="comment">//<sp/>2Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf16++)<sp/>=<sp/>((utf8[i]<sp/>&amp;<sp/>0x1F)<sp/>&lt;&lt;<sp/>6)<sp/>|<sp/>(utf8[i<sp/>+<sp/>1]<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>1Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(utf16++)<sp/>=<sp/>utf8[i]<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113" refid="class_bx_util_1a9734058f17823d1e2f3f7fc07a4aa121" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a9734058f17823d1e2f3f7fc07a4aa121" kindref="member" tooltip="UTF16을 UTF8로 전환시 필요한 UTF8의 바이트길이 ">GetLengthForUTF8</ref>(wstring<sp/>utf16,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf16length)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(utf16length<sp/>&lt;<sp/>0)<sp/>utf16length<sp/>=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>utf16length<sp/>&amp;&amp;<sp/>utf16[i];<sp/>++i)</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf16[i]<sp/>&amp;<sp/>0xFF80)<sp/>==<sp/>0x0000)<sp/></highlight><highlight class="comment">//<sp/>Ascii</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf16[i]<sp/>&amp;<sp/>0xF800)<sp/>==<sp/>0x0000)<sp/></highlight><highlight class="comment">//<sp/>2Bytes-Less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf16[i]<sp/>&amp;<sp/>0xFC00)<sp/>==<sp/>0xD800<sp/>&amp;&amp;<sp/>(utf16[i<sp/>+<sp/>1]<sp/>&amp;<sp/>0xFC00)<sp/>==<sp/>0xDC00)<sp/></highlight><highlight class="comment">//<sp/>4Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>2Bytes-Full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140" refid="class_bx_util_1a6609c0c508f2148565c35b9212052d33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_bx_util_1a6609c0c508f2148565c35b9212052d33" kindref="member" tooltip="UTF8을 UTF16으로 전환시 필요한 UTF16의 배열수량 ">GetLengthForUTF16</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>utf8,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf8length)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(utf8length<sp/>&lt;<sp/>0)<sp/>utf8length<sp/>=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>utf8length<sp/>&amp;&amp;<sp/>utf8[i];<sp/>++i)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf8[i]<sp/>&amp;<sp/>0xF8)<sp/>==<sp/>0xF0)<sp/></highlight><highlight class="comment">//<sp/>4Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf8[i]<sp/>&amp;<sp/>0xF0)<sp/>==<sp/>0xE0)<sp/></highlight><highlight class="comment">//<sp/>3Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((utf8[i]<sp/>&amp;<sp/>0xE0)<sp/>==<sp/>0xC0)<sp/></highlight><highlight class="comment">//<sp/>2Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>1Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175" refid="class_bx_util_1a8363c42cb6abcbd477dc37e85e26c84f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>*<sp/><ref refid="class_bx_util_1a8363c42cb6abcbd477dc37e85e26c84f" kindref="member" tooltip="교차테스트후 교차점을 구함 ">GetDotByLineCross</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>&amp;<sp/>DstB,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>&amp;<sp/>DstE,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>&amp;<sp/>SrcB,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>&amp;<sp/>SrcE)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_storage<sp/>_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>&amp;<sp/>Result<sp/>=<sp/>*((<ref refid="structpoint" kindref="compound" tooltip="point구조체 : x, y ">point</ref>*)<sp/><ref refid="namespace_bx_core_1_1_thread_1ac8200a15947866932b0851974b98257b" kindref="member" tooltip="현 스레드상의 저장소 개별연결(스레드수량 x 정적변수수량) ">BxCore::Thread::BindStorage</ref>(&amp;_));</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespace_bx_util_global_1a52580a7f5dbd7722b56eab2e3167292f" kindref="member" tooltip="최대값 구하기 ">BxUtilGlobal::Max</ref>(SrcB.x,<sp/>SrcE.x)<sp/>&lt;<sp/><ref refid="namespace_bx_util_global_1af6b6936a90b9f791ce6f2b2b4d15b15e" kindref="member" tooltip="최소값 구하기 ">BxUtilGlobal::Min</ref>(DstB.x,<sp/>DstE.x)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="namespace_bx_util_global_1a52580a7f5dbd7722b56eab2e3167292f" kindref="member" tooltip="최대값 구하기 ">BxUtilGlobal::Max</ref>(DstB.x,<sp/>DstE.x)<sp/>&lt;<sp/><ref refid="namespace_bx_util_global_1af6b6936a90b9f791ce6f2b2b4d15b15e" kindref="member" tooltip="최소값 구하기 ">BxUtilGlobal::Min</ref>(SrcB.x,<sp/>SrcE.x)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="namespace_bx_util_global_1a52580a7f5dbd7722b56eab2e3167292f" kindref="member" tooltip="최대값 구하기 ">BxUtilGlobal::Max</ref>(SrcB.y,<sp/>SrcE.y)<sp/>&lt;<sp/><ref refid="namespace_bx_util_global_1af6b6936a90b9f791ce6f2b2b4d15b15e" kindref="member" tooltip="최소값 구하기 ">BxUtilGlobal::Min</ref>(DstB.y,<sp/>DstE.y)</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="namespace_bx_util_global_1a52580a7f5dbd7722b56eab2e3167292f" kindref="member" tooltip="최대값 구하기 ">BxUtilGlobal::Max</ref>(DstB.y,<sp/>DstE.y)<sp/>&lt;<sp/><ref refid="namespace_bx_util_global_1af6b6936a90b9f791ce6f2b2b4d15b15e" kindref="member" tooltip="최소값 구하기 ">BxUtilGlobal::Min</ref>(SrcB.y,<sp/>SrcE.y))</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResultA1<sp/>=<sp/><ref refid="class_bx_util_1a147df2b368fe0381b9b46ea850d6f916" kindref="member" tooltip="점 3개의 방향성 값을 확인 ">GetClockwiseValue</ref>(DstB,<sp/>DstE,<sp/>SrcB);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResultB1<sp/>=<sp/><ref refid="class_bx_util_1a147df2b368fe0381b9b46ea850d6f916" kindref="member" tooltip="점 3개의 방향성 값을 확인 ">GetClockwiseValue</ref>(DstB,<sp/>DstE,<sp/>SrcE);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResultA2<sp/>=<sp/><ref refid="class_bx_util_1a147df2b368fe0381b9b46ea850d6f916" kindref="member" tooltip="점 3개의 방향성 값을 확인 ">GetClockwiseValue</ref>(SrcB,<sp/>SrcE,<sp/>DstB);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResultB2<sp/>=<sp/><ref refid="class_bx_util_1a147df2b368fe0381b9b46ea850d6f916" kindref="member" tooltip="점 3개의 방향성 값을 확인 ">GetClockwiseValue</ref>(SrcB,<sp/>SrcE,<sp/>DstE);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ResultA1<sp/>==<sp/>0<sp/>||<sp/>ResultB1<sp/>==<sp/>0<sp/>||<sp/>(ResultA1<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>0<sp/>&lt;<sp/>ResultB1)<sp/>||<sp/>(0<sp/>&lt;<sp/>ResultA1<sp/>&amp;&amp;<sp/>ResultB1<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(ResultA2<sp/>==<sp/>0<sp/>||<sp/>ResultB2<sp/>==<sp/>0<sp/>||<sp/>(ResultA2<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>0<sp/>&lt;<sp/>ResultB2)<sp/>||<sp/>(0<sp/>&lt;<sp/>ResultA2<sp/>&amp;&amp;<sp/>ResultB2<sp/>&lt;<sp/>0)))</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>수직</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DstB.x<sp/>==<sp/>DstE.x<sp/>&amp;&amp;<sp/>SrcB.x<sp/>==<sp/>SrcE.x)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.x<sp/>=<sp/>DstB.x;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DstB.y<sp/>&lt;<sp/>DstE.y)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInSrcB<sp/>=<sp/>(DstB.y<sp/>&lt;=<sp/>SrcB.y<sp/>&amp;&amp;<sp/>SrcB.y<sp/>&lt;=<sp/>DstE.y);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInSrcE<sp/>=<sp/>(DstB.y<sp/>&lt;=<sp/>SrcE.y<sp/>&amp;&amp;<sp/>SrcE.y<sp/>&lt;=<sp/>DstE.y);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcB<sp/>&amp;&amp;<sp/>IsInSrcE)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.y<sp/>=<sp/>(SrcB.y<sp/>&lt;<sp/>SrcE.y)?<sp/>SrcB.y<sp/>:<sp/>SrcE.y;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcB)<sp/>Result.y<sp/>=<sp/>SrcB.y;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcE)<sp/>Result.y<sp/>=<sp/>SrcE.y;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Result.y<sp/>=<sp/>(SrcB.y<sp/>&lt;<sp/>SrcE.y)?<sp/>DstB.y<sp/>:<sp/>DstE.y;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInSrcB<sp/>=<sp/>(DstE.y<sp/>&lt;=<sp/>SrcB.y<sp/>&amp;&amp;<sp/>SrcB.y<sp/>&lt;=<sp/>DstB.y);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInSrcE<sp/>=<sp/>(DstE.y<sp/>&lt;=<sp/>SrcE.y<sp/>&amp;&amp;<sp/>SrcE.y<sp/>&lt;=<sp/>DstB.y);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcB<sp/>&amp;&amp;<sp/>IsInSrcE)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.y<sp/>=<sp/>(SrcB.y<sp/>&lt;<sp/>SrcE.y)?<sp/>SrcE.y<sp/>:<sp/>SrcB.y;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcB)<sp/>Result.y<sp/>=<sp/>SrcB.y;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcE)<sp/>Result.y<sp/>=<sp/>SrcE.y;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Result.y<sp/>=<sp/>(SrcB.y<sp/>&lt;<sp/>SrcE.y)?<sp/>DstE.y<sp/>:<sp/>DstB.y;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>수평</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DstB.y<sp/>==<sp/>DstE.y<sp/>&amp;&amp;<sp/>SrcB.y<sp/>==<sp/>SrcE.y)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.y<sp/>=<sp/>DstB.y;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DstB.x<sp/>&lt;<sp/>DstE.x)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInSrcB<sp/>=<sp/>(DstB.x<sp/>&lt;=<sp/>SrcB.x<sp/>&amp;&amp;<sp/>SrcB.x<sp/>&lt;=<sp/>DstE.x);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInSrcE<sp/>=<sp/>(DstB.x<sp/>&lt;=<sp/>SrcE.x<sp/>&amp;&amp;<sp/>SrcE.x<sp/>&lt;=<sp/>DstE.x);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcB<sp/>&amp;&amp;<sp/>IsInSrcE)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.x<sp/>=<sp/>(SrcB.x<sp/>&lt;<sp/>SrcE.x)?<sp/>SrcB.x<sp/>:<sp/>SrcE.x;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcB)<sp/>Result.x<sp/>=<sp/>SrcB.x;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcE)<sp/>Result.x<sp/>=<sp/>SrcE.x;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Result.x<sp/>=<sp/>(SrcB.x<sp/>&lt;<sp/>SrcE.x)?<sp/>DstB.x<sp/>:<sp/>DstE.x;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInSrcB<sp/>=<sp/>(DstE.x<sp/>&lt;=<sp/>SrcB.x<sp/>&amp;&amp;<sp/>SrcB.x<sp/>&lt;=<sp/>DstB.x);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInSrcE<sp/>=<sp/>(DstE.x<sp/>&lt;=<sp/>SrcE.x<sp/>&amp;&amp;<sp/>SrcE.x<sp/>&lt;=<sp/>DstB.x);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcB<sp/>&amp;&amp;<sp/>IsInSrcE)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.x<sp/>=<sp/>(SrcB.x<sp/>&lt;<sp/>SrcE.x)?<sp/>SrcE.x<sp/>:<sp/>SrcB.x;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcB)<sp/>Result.x<sp/>=<sp/>SrcB.x;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsInSrcE)<sp/>Result.x<sp/>=<sp/>SrcE.x;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Result.x<sp/>=<sp/>(SrcB.x<sp/>&lt;<sp/>SrcE.x)?<sp/>DstE.x<sp/>:<sp/>DstB.x;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>직교</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DstB.x<sp/>==<sp/>DstE.x<sp/>&amp;&amp;<sp/>SrcB.y<sp/>==<sp/>SrcE.y)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.x<sp/>=<sp/>DstB.x;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.y<sp/>=<sp/>SrcB.y;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SrcB.x<sp/>==<sp/>SrcE.x<sp/>&amp;&amp;<sp/>DstB.y<sp/>==<sp/>DstE.y)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.x<sp/>=<sp/>SrcB.x;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.y<sp/>=<sp/>DstB.y;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>꼭지점닿음</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((DstB.x<sp/>==<sp/>SrcB.x<sp/>&amp;&amp;<sp/>DstB.y<sp/>==<sp/>SrcB.y)<sp/>||<sp/>(DstE.x<sp/>==<sp/>SrcE.x<sp/>&amp;&amp;<sp/>DstE.y<sp/>==<sp/>SrcE.y)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(DstB.x<sp/>==<sp/>SrcE.x<sp/>&amp;&amp;<sp/>DstB.y<sp/>==<sp/>SrcE.y)<sp/>||<sp/>(DstE.x<sp/>==<sp/>SrcB.x<sp/>&amp;&amp;<sp/>DstE.y<sp/>==<sp/>SrcB.y))</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>직선A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fint<sp/>A_A<sp/>=<sp/>ItoF(DstB.y<sp/>-<sp/>DstE.y);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fint<sp/>A_B<sp/>=<sp/>ItoF(DstE.x<sp/>-<sp/>DstB.x);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>A_Distance<sp/>=<sp/><ref refid="namespace_bx_util_global_1a0732d3795e4787d47c7ac63e74c083ab" kindref="member" tooltip="64비트 제곱근값 구하기 ">BxUtilGlobal::Sqrt64</ref>(<ref refid="namespace_bx_util_global_1aed2b77f1f355f083931ba7e118115b9a" kindref="member" tooltip="64비트 제곱값 구하기 ">BxUtilGlobal::Pow64</ref>(A_A)<sp/>+<sp/><ref refid="namespace_bx_util_global_1aed2b77f1f355f083931ba7e118115b9a" kindref="member" tooltip="64비트 제곱값 구하기 ">BxUtilGlobal::Pow64</ref>(A_B));</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A_A<sp/>=<sp/>(((huge)<sp/>A_A)<sp/>&lt;&lt;<sp/>16)<sp/>/<sp/>A_Distance;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A_B<sp/>=<sp/>(((huge)<sp/>A_B)<sp/>&lt;&lt;<sp/>16)<sp/>/<sp/>A_Distance;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>A_C<sp/>=<sp/>A_A<sp/>*<sp/>DstB.x<sp/>+<sp/>A_B<sp/>*<sp/>DstB.y;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>직선B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fint<sp/>B_A<sp/>=<sp/>ItoF(SrcB.y<sp/>-<sp/>SrcE.y);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fint<sp/>B_B<sp/>=<sp/>ItoF(SrcE.x<sp/>-<sp/>SrcB.x);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>B_Distance<sp/>=<sp/><ref refid="namespace_bx_util_global_1a0732d3795e4787d47c7ac63e74c083ab" kindref="member" tooltip="64비트 제곱근값 구하기 ">BxUtilGlobal::Sqrt64</ref>(<ref refid="namespace_bx_util_global_1aed2b77f1f355f083931ba7e118115b9a" kindref="member" tooltip="64비트 제곱값 구하기 ">BxUtilGlobal::Pow64</ref>(B_A)<sp/>+<sp/><ref refid="namespace_bx_util_global_1aed2b77f1f355f083931ba7e118115b9a" kindref="member" tooltip="64비트 제곱값 구하기 ">BxUtilGlobal::Pow64</ref>(B_B));</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_A<sp/>=<sp/>(((huge)<sp/>B_A)<sp/>&lt;&lt;<sp/>16)<sp/>/<sp/>B_Distance;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_B<sp/>=<sp/>(((huge)<sp/>B_B)<sp/>&lt;&lt;<sp/>16)<sp/>/<sp/>B_Distance;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>B_C<sp/>=<sp/>B_A<sp/>*<sp/>SrcB.x<sp/>+<sp/>B_B<sp/>*<sp/>SrcB.y;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>교점구하기</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fint<sp/>Rate<sp/>=<sp/>((A_B<sp/>*<sp/>(huge)<sp/>B_A)<sp/>&gt;&gt;<sp/>16)<sp/>-<sp/>((A_A<sp/>*<sp/>(huge)<sp/>B_B)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.x<sp/>=<sp/>FtoI((A_B<sp/>*<sp/>(huge)<sp/>B_C<sp/>-<sp/>B_B<sp/>*<sp/>(huge)<sp/>A_C)<sp/>/<sp/>Rate);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result.y<sp/>=<sp/>FtoI((A_A<sp/>*<sp/>(huge)<sp/>B_C<sp/>-<sp/>B_A<sp/>*<sp/>(huge)<sp/>A_C)<sp/>/<sp/>-Rate);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Result;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{Angle90<sp/>=<sp/>256,<sp/>Angle180<sp/>=<sp/>512,<sp/>Angle270<sp/>=<sp/>768};</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint&amp;<sp/>RandomTable(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>{thread_storage<sp/>_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint)<sp/>*<sp/>256;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint*)<sp/><ref refid="namespace_bx_core_1_1_thread_1ac8200a15947866932b0851974b98257b" kindref="member" tooltip="현 스레드상의 저장소 개별연결(스레드수량 x 정적변수수량) ">BxCore::Thread::BindStorage</ref>(&amp;_))[Index];}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wchar<sp/>CP949ToUTF16_Search(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cp949a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cp949b<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/>98<sp/>+<sp/>51<sp/>+<sp/>2350;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_storage<sp/>_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar)<sp/>*<sp/>(Length<sp/>+<sp/>Length);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wchar*<sp/>CP949<sp/>=<sp/>(wchar*)<sp/><ref refid="namespace_bx_core_1_1_thread_1ac8200a15947866932b0851974b98257b" kindref="member" tooltip="현 스레드상의 저장소 개별연결(스레드수량 x 정적변수수량) ">BxCore::Thread::BindStorage</ref>(&amp;_);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wchar*<sp/>UTF16<sp/>=<sp/>CP949<sp/>+<sp/>Length;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!CP949[0])</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(CP949,<sp/>BxCore::Util::CP949Table(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar)<sp/>*<sp/>Length);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(UTF16,<sp/>BxCore::Util::UTF16Table(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar)<sp/>*<sp/>Length);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Length<sp/>-<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBest<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>Length;<sp/>++j)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CP949[j]<sp/>&lt;<sp/>CP949[iBest])</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iBest<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iBest<sp/>!=<sp/>i)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wchar<sp/>Temp<sp/>=<sp/>CP949[i];</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CP949[i]<sp/>=<sp/>CP949[iBest];</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CP949[iBest]<sp/>=<sp/>Temp;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Temp<sp/>=<sp/>UTF16[i];</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTF16[i]<sp/>=<sp/>UTF16[iBest];</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTF16[iBest]<sp/>=<sp/>Temp;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wchar<sp/>Key<sp/>=<sp/>((cp949b<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(cp949a<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Lower<sp/>=<sp/>0,<sp/>Upper<sp/>=<sp/>Length<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(Lower<sp/>&lt;=<sp/>Upper)</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Middle<sp/>=<sp/>(Lower<sp/>+<sp/>Upper)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CP949[Middle]<sp/>==<sp/>Key)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wchar)<sp/>UTF16[Middle];</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CP949[Middle]<sp/>&lt;<sp/>Key)</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lower<sp/>=<sp/>Middle<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Upper<sp/>=<sp/>Middle<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wchar)<sp/>*(_W2(</highlight><highlight class="stringliteral">&quot;\x25A1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>UTF16ToCP949_Search(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wchar<sp/>utf16)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/>98<sp/>+<sp/>51<sp/>+<sp/>2350;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_storage<sp/>_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar)<sp/>*<sp/>(Length<sp/>+<sp/>Length);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wchar*<sp/>UTF16<sp/>=<sp/>(wchar*)<sp/><ref refid="namespace_bx_core_1_1_thread_1ac8200a15947866932b0851974b98257b" kindref="member" tooltip="현 스레드상의 저장소 개별연결(스레드수량 x 정적변수수량) ">BxCore::Thread::BindStorage</ref>(&amp;_);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wchar*<sp/>CP949<sp/>=<sp/>UTF16<sp/>+<sp/>Length;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!UTF16[0])</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(UTF16,<sp/>BxCore::Util::UTF16Table(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar)<sp/>*<sp/>Length);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_bx_core_1_1_util_1aa1d8a11236853f4cbb3207c80cf5b4fc" kindref="member" tooltip="메모리 복사 ">BxCore::Util::MemCpy</ref>(CP949,<sp/>BxCore::Util::CP949Table(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar)<sp/>*<sp/>Length);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Length<sp/>-<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBest<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>Length;<sp/>++j)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(UTF16[j]<sp/>&lt;<sp/>UTF16[iBest])</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iBest<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iBest<sp/>!=<sp/>i)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wchar<sp/>Temp<sp/>=<sp/>UTF16[i];</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTF16[i]<sp/>=<sp/>UTF16[iBest];</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTF16[iBest]<sp/>=<sp/>Temp;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Temp<sp/>=<sp/>CP949[i];</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CP949[i]<sp/>=<sp/>CP949[iBest];</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CP949[iBest]<sp/>=<sp/>Temp;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wchar<sp/>Key<sp/>=<sp/>utf16;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Lower<sp/>=<sp/>0,<sp/>Upper<sp/>=<sp/>Length<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(Lower<sp/>&lt;=<sp/>Upper)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Middle<sp/>=<sp/>(Lower<sp/>+<sp/>Upper)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(UTF16[Middle]<sp/>==<sp/>Key)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>&amp;CP949[Middle];</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(UTF16[Middle]<sp/>&lt;<sp/>Key)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lower<sp/>=<sp/>Middle<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Upper<sp/>=<sp/>Middle<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>_W2(</highlight><highlight class="stringliteral">&quot;\xE0A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint&amp;<sp/>_RandValue()</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_storage<sp/>_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*((uint*)<sp/><ref refid="namespace_bx_core_1_1_thread_1ac8200a15947866932b0851974b98257b" kindref="member" tooltip="현 스레드상의 저장소 개별연결(스레드수량 x 정적변수수량) ">BxCore::Thread::BindStorage</ref>(&amp;_));</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_SetRand(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>Key)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RandValue()<sp/>=<sp/>Key;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>global_func<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint<sp/>_MakeRand()</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RandValue()<sp/>*=<sp/>0x000343fd;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RandValue()<sp/>+=<sp/>0x00269ec3;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_RandValue()<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x7fff;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="C:/Bonexpecial/Team_Onezay/Project/BxEngine290ForMarmalade700/bxlib/BxUtil.hpp"/>
  </compounddef>
</doxygen>
